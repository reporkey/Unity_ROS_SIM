<launch>
  <master auto="start"/>
  <!-- <arg name="map" value="map_160319"/> -->
  <arg name="map" value="icra2019"/>
  <!-- <arg name="namespace" default="r1"/> -->
    <arg name="pos_x" default="1"/>
    <arg name="pos_y" default="1"/>
    <arg name="pos_R" default="0"/>
    <arg name="visualize" default="false"/>
    <arg name="led_color" default="Red"/>
    <param name="/use_sim_time" value="true"/>
    <arg name="use_sim_time" default="true"/>

  <!--Load parameters for localization node  -->
  <rosparam command="load" file="$(find roborts_localization)/config/localization_backup.yaml" />
  <rosparam command="load" file="$(find roborts_localization)/amcl/config/amcl.yaml" />


  <!-- loading parameters for video purpose -->
  <!-- <param name="decision_config_name" value="decision_temp"/> -->

  <!-- Run the robot sdk interface -->
  <!-- <include file="$(find roborts_bringup)/launch/base.launch" /> -->

  <!-- Publish static tf -->
  <include file="$(find roborts_bringup)/launch/static_tf.launch" />

  <!-- Run the map server -->
  <node name="map_server" pkg="map_server" type="map_server" args="$(find roborts_bringup)/maps/$(arg map).yaml" respawn="false" />

  
  <!-- Run the lidar node -->
  <!-- <node name="rplidar_node" pkg="rplidar_ros" type="rplidarNode" output="screen">
      <param name="serial_port" type="string" value="/dev/rplidar"/>
      <param name="serial_baudrate" type="int" value="115200"/>
      <param name="frame_id" type="string" value="base_laser_link"/>
      <param name="inverted" type="bool" value="false"/>
      <param name="angle_compensate" type="bool" value="true"/>
  </node> -->
  <!-- <include file="$(find roborts_bringup)/launch/lidar_yd.launch" />
   -->

  <!-- <include file="$(find roborts_bringup)/launch/rplidar_a3.launch" /> -->

  <node name="rviz" pkg="rviz" type="rviz" args="-d $(find roborts_bringup)/rviz/roborts.rviz" />

  <!-- <node name="armor_detection_node" type="armor_detection_node" pkg="roborts_detection" respawn="false" /> -->
  <!-- <node name="decision_node" type="decision_node" pkg="roborts_decision" respawn="false" output="screen"  /> -->
  
  <node pkg="roborts_decision" type="navigation_test_decision" name="navigation_test_decision"  respawn="false" output="screen"  />
  
  <!-- <node pkg="roborts_camera" type="roborts_camera_node"  name="roborts_camera_node" respawn="false" /> -->

  <!-- Run the localization node -->
  <node pkg="roborts_localization" type="localization_node" name="localization_node" respawn="false" output="screen"  />

  <!-- Run the global planner node -->
  <node pkg="roborts_planning" type="global_planner_node" name="global_planner_node" respawn="false" />

  <!-- Run the local planner node -->
  <node pkg="roborts_planning" type="local_planner_node" name="local_planner_node" respawn="false" />
  
  <!-- Run the velocity converter node -->
  <node pkg="roborts_planning" type="vel_converter" name="vel_converter_node" respawn="false" />
</launch>

